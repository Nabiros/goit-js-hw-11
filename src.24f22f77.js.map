{"version":3,"sources":["js/refs.js","js/colors.js","js/switch-color.js","js/timer.js","js/preTask1.js","js/preTask2.js","js/preTask3.js","index.js"],"names":["refs","btnStart","document","querySelector","btnStop","colors","start","disabled","timerId","setInterval","body","style","backgroundColor","randomIntegerFromInterval","length","stop","clearInterval","min","max","Math","floor","random","addEventListener","CountdownTimer","constructor","selector","targetDate","interval","updateDate","getRefs","days","hours","mins","secs","time","Date","now","textContent","timer","delay","ms","Promise","resolve","setTimeout","logger","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","makeTransaction","transaction","reject","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.24f22f77.js","sourceRoot":"../src","sourcesContent":["\nconst refs = {\n    btnStart: document.querySelector('button[data-action= \"start\"]'),\n    btnStop: document.querySelector('button[data-action= \"stop\"]'),\n};\n\nexport default refs;","const colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\n\nexport default colors;","import refs from \"../js/refs\";\nimport colors from '../js/colors';\n\nconst btnStart = refs.btnStart;\nconst btnStop = refs.btnStop;\n\nconst start = () => {\n    btnStart.disabled = true;\n    timerId = setInterval(() => {document.body.style.backgroundColor = colors[randomIntegerFromInterval(0, colors.length -1)]},1000)\n}\n\nconst stop = () => {\n    btnStart.disabled = false;\n    clearInterval(timerId)\n}\n\nlet timerId = null;\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nbtnStart.addEventListener('click', start)\nbtnStop.addEventListener('click', stop)","class CountdownTimer{\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.interval = null;\n        this.updateDate();\n    }\n    \n    getRefs() {\n        return {\n            days: document.querySelector(`${this.selector} [data-value=\"days\"]`),\n            hours: document.querySelector(`${this.selector} [data-value=\"hours\"]`),\n            mins: document.querySelector(`${this.selector} [data-value=\"mins\"]`),\n            secs: document.querySelector(`${this.selector} [data-value=\"secs\"]`),   \n        };\n    }\n    \n    updateDate() {\n        this.interval = setInterval(() => {\n            const { days, hours, mins, secs } = this.getRefs()\n            const time = this.targetDate - Date.now();\n            if (time <= 0) {\n                clearInterval(this.interval);\n                return;\n            }\n\n            days.textContent = Math.floor(time / (1000 * 60 * 60 * 24));\n            hours.textContent = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            mins.textContent = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n            secs.textContent = Math.floor((time % (1000 * 60)) / 1000);\n        })\n        \n    }\n}\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2021')\n});\n\n","const delay = ms => {\n    return new Promise(resolve => {\n        setTimeout(() => resolve(ms), ms)\n    } )\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n    return new Promise(resolve => {\n        const updatedUsers = allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user,\n  );\n\n  resolve(updatedUsers);})\n  \n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n/*\n * Сейчас работает так\n */\ntoggleUserState(users, 'Mango', logger);\ntoggleUserState(users, 'Lux', logger);\n\n/*\n * Должно работать так\n */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n\n    return new Promise((resolve, reject) => {\n        const delay = randomIntegerFromInterval(200, 500);\n\n  setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n\n    if (canProcess) {\n      resolve({id:transaction.id, time:delay});\n    } else {\n      reject(transaction.id);\n    }\n  }, delay);\n    })\n  \n};\n\nconst logSuccess = ({id, time}) => {\n  console.log(`Transaction ${id} processed in ${time} ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\n/*  * Работает так */\n\nmakeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\nmakeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n\n\n/*  * Должно работать так */\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);\n","import './sass/main.scss';\nimport switchColors from './js/switch-color';\nimport timer from './js/timer';\nimport preTask1 from './js/preTask1';\nimport preTask2 from './js/preTask2';\nimport preTask3 from './js/preTask3';\n"]}